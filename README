README1.Student : Gogea MihailGrupa si serie: 334 CCTema 3 Grafica Simularea ApeiTimp rezolvare tema : 15-17 oreMentionez ca am implementat toate cerintele temei .Mentionez ca tema a fost lucrata incepand cu Laboratorul 8 (cpp,Shader) , in care am introdus camera de la laboratorul 5.2.Pe ecran este sursa lumini, o sfera galbena care emana lumina , pe langa aceasta mai este si o sfera ca apasand tasta SPACE arunca o picatura de apa. Lumina se poate deplasa cu sagetile , iar pentru a se deplasa in sus se apasa tasta M iar pentru jos tasta N. Pentru a se deplasa sfera care arunca picaturi de apa , se apasa tastele w , a, s, d. Pentru a se active modul slow-motion se apasa tasta T, iar urmand a dezactiva se va mai apasa inca odata tasta T. Pentru deplasarea cu camera FPS se va apasa click dreapta, apoi w, a , s, d.Arhiva contine urmatoarele fisiere din folderul /Source/Laboratoare/Laborator8/ care sunt importante jocului:- LabCamera.h- Laborator8.cpp- Laborator8.h- Shaders-FragmentShader-VertexShaderMentionez ca tema a fost facuta cu ajutorul laboratorului 8 ,continuand in respectivul cod si am continuat de acolo in fisierul Laborator8.cpp modificand si fisierele mentionate mai sus.3. Detalii de implementare : Voi face o descriere pentru fiecare fisier in care am scris .Unele detali sunt prezentate si in comentarile surselor.In LabCamera.h este scris de la laborator , pentru miscarile camerei care am implementat.In VertexShader.glsl am implementat miscarea cordonatei Y a plasei , prin formula atasata in enuntul temei. Am calculat fiecare varf, urmand apoi sa calculez normalele, apoi normala principala .In FragmentShader.glsl am implementat luminarea asa cum a fost ceruta in cursul laboratorului nr. 8 .In Laborator8.cpp este scrisa majoritatea tema . Aici am creat o Clasa numita Bila care retine propietatile picaturi de apa. Am creat 3 bile pentru efectul bouncing.In functia Init , am creat apa (plansa) 200 x 200 , am initializat camera si toate variabilele/pozitile la inceputul jocului.In functia Update in functie de efect cresc timpul , urmand apoi sa desenez toate obiectele pe ecran , iar in cazul picaturilor de apa vor aparea atunci cand una isi va face traiectoria urmand sa apara cealalta, facand un bouncing-efect. In functia RenderSimpleMesh am trimis toate variabilele ce imi trebuiesc in Shadere pentru a calcula lumina si miscarea punctelor.In functile urmatoare am implementat pentru fiecare tasta , miscarea obiectelor de pe ecran.Pentru mai multe detalii de implementare a se vedea codul , deoarece am scris comentarii amanuntite pentru linile de cod mai complicate si pentru fiecare variabila declarata .4. Probleme aparute si rezolvate.Problemele aparute pe parcurs au fost destule , tema aceasta fiind una mai mult de gandit linii de cod multe nu prea au fost scrise , dar ideea de a face undelele , distanta de unde pana unde se vor face a fost dificila, efectul de slow-motion fiind si el destul de dificil in a gasi un timp potrivit astfel incat sa se incadreze undele cu picaturile de apa.5.Continutul arhiveiArhiva contine proiectul ce contine toate folderele din Framework si un fisier README in format PDF si format word.docx in functie de dorinta corectorului de a deschide.